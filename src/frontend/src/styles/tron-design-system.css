/* Tron x MetaMask Design System */

:root {
  /* Tron Color Palette */
  --tron-cyan: #00D9FF;
  --tron-blue: #0096DB;
  --tron-deep-blue: #003C5C;
  --tron-orange: #FF6B1A;
  --tron-dark-orange: #CC4400;
  
  /* Background Colors */
  --tron-black: #000000;
  --tron-grid-black: #0A0A0A;
  --tron-circuit-dark: #050810;
  
  /* Glass Effects */
  --glass-bg: rgba(10, 14, 20, 0.6);
  --glass-border: rgba(0, 217, 255, 0.2);
  --glass-blur: blur(20px) saturate(180%);
  
  /* Spacing */
  --space-unit: 8px;
}

/* Base Styles */
body {
  font-family: var(--font-inter), system-ui, -apple-system, sans-serif;
  background: var(--tron-black);
  color: #FFFFFF;
  overflow-x: hidden;
}

/* Typography Classes */
.font-orbitron {
  font-family: var(--font-orbitron), sans-serif;
}

/* Glassmorphism Components */
.glass-panel {
  background: var(--glass-bg);
  backdrop-filter: var(--glass-blur);
  -webkit-backdrop-filter: var(--glass-blur);
  border: 1px solid var(--glass-border);
  border-radius: 16px;
  box-shadow: 
    0 8px 32px rgba(0, 217, 255, 0.1),
    inset 0 1px 0 rgba(255, 255, 255, 0.05);
  position: relative;
  overflow: hidden;
}

.glass-panel::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 1px;
  background: linear-gradient(90deg, 
    transparent, 
    rgba(0, 217, 255, 0.5) 20%, 
    rgba(0, 217, 255, 0.5) 80%, 
    transparent
  );
}

/* Neon Effects */
.neon-glow-cyan {
  text-shadow: 
    0 0 10px var(--tron-cyan),
    0 0 20px var(--tron-cyan),
    0 0 30px var(--tron-cyan);
}

.neon-glow-orange {
  text-shadow: 
    0 0 10px var(--tron-orange),
    0 0 20px var(--tron-orange),
    0 0 30px var(--tron-orange);
}

.neon-border {
  border: 2px solid var(--tron-cyan);
  box-shadow: 
    inset 0 0 10px rgba(0, 217, 255, 0.5),
    0 0 20px rgba(0, 217, 255, 0.3);
  position: relative;
}

.neon-border-orange {
  border-color: var(--tron-orange);
  box-shadow: 
    inset 0 0 10px rgba(255, 107, 26, 0.5),
    0 0 20px rgba(255, 107, 26, 0.3);
}

/* Grid Background */
.tron-grid {
  position: relative;
  overflow: hidden;
}

.tron-grid::before {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background-image: 
    linear-gradient(rgba(0, 217, 255, 0.1) 1px, transparent 1px),
    linear-gradient(90deg, rgba(0, 217, 255, 0.1) 1px, transparent 1px);
  background-size: 50px 50px;
  animation: grid-move 20s linear infinite;
  transform: perspective(500px) rotateX(60deg);
  transform-origin: center center;
}

@keyframes grid-move {
  0% { transform: perspective(500px) rotateX(60deg) translateY(0); }
  100% { transform: perspective(500px) rotateX(60deg) translateY(50px); }
}

/* Circuit Lines Animation */
.circuit-lines {
  position: absolute;
  width: 100%;
  height: 100%;
  pointer-events: none;
  overflow: hidden;
}

.circuit-line {
  position: absolute;
  height: 2px;
  background: var(--tron-cyan);
  box-shadow: 0 0 10px var(--tron-cyan);
  animation: circuit-pulse 3s ease-in-out infinite;
}

@keyframes circuit-pulse {
  0%, 100% { opacity: 0.3; }
  50% { opacity: 1; }
}

/* Button Styles */
.btn-tron {
  font-family: var(--font-orbitron), sans-serif;
  font-weight: 500;
  text-transform: uppercase;
  letter-spacing: 0.1em;
  padding: 12px 32px;
  border-radius: 4px;
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
  cursor: pointer;
}

.btn-tron-primary {
  background: linear-gradient(135deg, var(--tron-cyan) 0%, var(--tron-blue) 100%);
  border: 1px solid var(--tron-cyan);
  color: var(--tron-black);
  box-shadow: 
    0 2px 10px rgba(0, 217, 255, 0.3),
    inset 0 1px 0 rgba(255, 255, 255, 0.2);
}

.btn-tron-primary:hover {
  transform: translateY(-2px);
  box-shadow: 
    0 4px 20px rgba(0, 217, 255, 0.5),
    0 0 30px rgba(0, 217, 255, 0.3),
    inset 0 1px 0 rgba(255, 255, 255, 0.3);
}

.btn-tron-secondary {
  background: transparent;
  border: 2px solid var(--tron-cyan);
  color: var(--tron-cyan);
  box-shadow: inset 0 0 10px rgba(0, 217, 255, 0.1);
}

.btn-tron-secondary:hover {
  background: rgba(0, 217, 255, 0.1);
  box-shadow: 
    inset 0 0 20px rgba(0, 217, 255, 0.2),
    0 0 20px rgba(0, 217, 255, 0.3);
  text-shadow: 0 0 10px var(--tron-cyan);
}

/* Card Components */
.card-tron {
  background: var(--glass-bg);
  backdrop-filter: var(--glass-blur);
  -webkit-backdrop-filter: var(--glass-blur);
  border: 1px solid var(--glass-border);
  border-radius: 8px;
  padding: 24px;
  position: relative;
  overflow: hidden;
  transition: all 0.3s ease;
}

.card-tron::before {
  content: '';
  position: absolute;
  top: -2px;
  left: -2px;
  right: -2px;
  bottom: -2px;
  background: linear-gradient(45deg, var(--tron-cyan), var(--tron-blue), var(--tron-cyan));
  border-radius: 8px;
  opacity: 0;
  z-index: -1;
  transition: opacity 0.3s ease;
}

.card-tron:hover::before {
  opacity: 0.5;
  animation: border-pulse 2s linear infinite;
}

@keyframes border-pulse {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Typography */
.heading-hero {
  font-family: var(--font-orbitron), sans-serif;
  font-size: 4.5rem;
  line-height: 5rem;
  font-weight: 900;
  letter-spacing: -0.02em;
  background: linear-gradient(135deg, var(--tron-cyan) 0%, var(--tron-blue) 50%, var(--tron-cyan) 100%);
  background-size: 200% 100%;
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  animation: gradient-shift 3s ease infinite;
}

@keyframes gradient-shift {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

.heading-glow {
  position: relative;
  display: inline-block;
}

.heading-glow::after {
  content: attr(data-text);
  position: absolute;
  left: 0;
  top: 0;
  z-index: -1;
  filter: blur(10px);
  opacity: 0.7;
  color: var(--tron-cyan);
}

/* Navigation */
.nav-tron {
  background: rgba(5, 8, 16, 0.8);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  border-bottom: 1px solid var(--glass-border);
  position: sticky;
  top: 0;
  z-index: 1000;
}

.nav-link-tron {
  color: #E5E5E5;
  text-decoration: none;
  padding: 8px 16px;
  position: relative;
  transition: all 0.3s ease;
  font-weight: 500;
  letter-spacing: 0.05em;
}

.nav-link-tron::after {
  content: '';
  position: absolute;
  bottom: -2px;
  left: 0;
  width: 0;
  height: 2px;
  background: var(--tron-cyan);
  box-shadow: 0 0 10px var(--tron-cyan);
  transition: width 0.3s ease;
}

.nav-link-tron:hover {
  color: var(--tron-cyan);
  text-shadow: 0 0 10px var(--tron-cyan);
}

.nav-link-tron:hover::after {
  width: 100%;
}

/* Animations */
@keyframes glitch {
  0% {
    text-shadow: 
      0.05em 0 0 rgba(255, 0, 0, 0.75),
      -0.025em -0.05em 0 rgba(0, 255, 0, 0.75),
      0.025em 0.05em 0 rgba(0, 0, 255, 0.75);
  }
  14% {
    text-shadow: 
      0.05em 0 0 rgba(255, 0, 0, 0.75),
      -0.025em -0.05em 0 rgba(0, 255, 0, 0.75),
      0.025em 0.05em 0 rgba(0, 0, 255, 0.75);
  }
  15% {
    text-shadow: 
      -0.05em -0.025em 0 rgba(255, 0, 0, 0.75),
      0.025em 0.025em 0 rgba(0, 255, 0, 0.75),
      -0.05em -0.05em 0 rgba(0, 0, 255, 0.75);
  }
  49% {
    text-shadow: 
      -0.05em -0.025em 0 rgba(255, 0, 0, 0.75),
      0.025em 0.025em 0 rgba(0, 255, 0, 0.75),
      -0.05em -0.05em 0 rgba(0, 0, 255, 0.75);
  }
  50% {
    text-shadow: 
      0.025em 0.05em 0 rgba(255, 0, 0, 0.75),
      0.05em 0 0 rgba(0, 255, 0, 0.75),
      0 -0.05em 0 rgba(0, 0, 255, 0.75);
  }
  99% {
    text-shadow: 
      0.025em 0.05em 0 rgba(255, 0, 0, 0.75),
      0.05em 0 0 rgba(0, 255, 0, 0.75),
      0 -0.05em 0 rgba(0, 0, 255, 0.75);
  }
  100% {
    text-shadow: 
      -0.025em 0 0 rgba(255, 0, 0, 0.75),
      -0.025em -0.025em 0 rgba(0, 255, 0, 0.75),
      -0.025em -0.05em 0 rgba(0, 0, 255, 0.75);
  }
}

.glitch-text {
  animation: glitch 2s infinite;
}

/* Holographic Effect */
.holographic {
  background: linear-gradient(
    45deg,
    #ff0080,
    #ff8c00,
    #40e0d0,
    #00ff00,
    #00ffff,
    #ff0080
  );
  background-size: 300% 300%;
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  animation: holographic-shift 3s ease infinite;
}

@keyframes holographic-shift {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

/* Loading Animation */
.loading-circuit {
  width: 100px;
  height: 100px;
  position: relative;
  animation: rotate 2s linear infinite;
}

.loading-circuit::before,
.loading-circuit::after {
  content: '';
  position: absolute;
  border: 2px solid var(--tron-cyan);
  border-radius: 50%;
  box-shadow: 0 0 20px var(--tron-cyan);
}

.loading-circuit::before {
  width: 100%;
  height: 100%;
  border-right-color: transparent;
  border-bottom-color: transparent;
}

.loading-circuit::after {
  width: 80%;
  height: 80%;
  top: 10%;
  left: 10%;
  border-left-color: transparent;
  border-top-color: transparent;
  animation: rotate-reverse 1.5s linear infinite;
}

@keyframes rotate {
  100% { transform: rotate(360deg); }
}

@keyframes rotate-reverse {
  100% { transform: rotate(-360deg); }
}

/* Responsive Utilities */
@media (max-width: 768px) {
  .heading-hero {
    font-size: 3rem;
    line-height: 3.5rem;
  }
  
  .btn-tron {
    padding: 10px 24px;
    font-size: 0.875rem;
  }
  
  .card-tron {
    padding: 16px;
  }
}

/* Digital Rain Effect */
.digital-rain {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  overflow: hidden;
  z-index: -1;
}

.rain-column {
  position: absolute;
  top: -100%;
  font-family: var(--font-geist-mono), monospace;
  font-size: 14px;
  color: var(--tron-cyan);
  opacity: 0.1;
  animation: rain-fall linear infinite;
}

@keyframes rain-fall {
  to {
    transform: translateY(calc(100vh + 100%));
  }
}

/* Scroll Animation Classes */
.animate-in {
  opacity: 1 !important;
  transform: translateY(0) !important;
}

.fade-in-up {
  opacity: 0;
  transform: translateY(40px);
  transition: all 0.8s cubic-bezier(0.16, 1, 0.3, 1);
}

.fade-in-left {
  opacity: 0;
  transform: translateX(40px);
  transition: all 0.8s cubic-bezier(0.16, 1, 0.3, 1);
}

.fade-in-right {
  opacity: 0;
  transform: translateX(-40px);
  transition: all 0.8s cubic-bezier(0.16, 1, 0.3, 1);
}

.scale-in {
  opacity: 0;
  transform: scale(0.85);
  transition: all 0.8s cubic-bezier(0.16, 1, 0.3, 1);
}

.stagger-in {
  opacity: 0;
  transform: translateY(30px) scale(0.95);
  transition: all 0.6s cubic-bezier(0.16, 1, 0.3, 1);
}

/* Staggered animation delays */
.stagger-1 { transition-delay: 0.1s; }
.stagger-2 { transition-delay: 0.2s; }
.stagger-3 { transition-delay: 0.3s; }
.stagger-4 { transition-delay: 0.4s; }
.stagger-5 { transition-delay: 0.5s; }
.stagger-6 { transition-delay: 0.6s; }

/* Parallax layers */
.parallax-layer {
  position: absolute;
  top: -20%;
  left: -20%;
  right: -20%;
  bottom: -20%;
  width: 140%;
  height: 140%;
  will-change: transform;
  pointer-events: none;
}

.parallax-bg-1 {
  background: radial-gradient(circle at 20% 50%, var(--tron-cyan) 0%, transparent 50%);
  opacity: 0.15;
}

.parallax-bg-2 {
  background: radial-gradient(circle at 80% 50%, var(--tron-orange) 0%, transparent 50%);
  opacity: 0.15;
}

.parallax-bg-3 {
  background: radial-gradient(circle at 50% 50%, #7B2FFF 0%, transparent 60%);
  opacity: 0.1;
}

/* Floating elements */
.float-animation {
  animation: float 6s ease-in-out infinite;
}

@keyframes float {
  0%, 100% { transform: translateY(0px); }
  50% { transform: translateY(-20px); }
}

/* Gradient orbs */
.gradient-orb {
  position: absolute;
  border-radius: 50%;
  filter: blur(80px);
  opacity: 0.6;
  animation: orb-float 20s ease-in-out infinite;
  pointer-events: none;
}

.gradient-orb-1 {
  width: 600px;
  height: 600px;
  background: radial-gradient(circle, var(--tron-cyan), transparent);
  top: -200px;
  left: -200px;
}

.gradient-orb-2 {
  width: 800px;
  height: 800px;
  background: radial-gradient(circle, var(--tron-orange), transparent);
  bottom: -300px;
  right: -300px;
  animation-delay: -10s;
}

.gradient-orb-3 {
  width: 500px;
  height: 500px;
  background: radial-gradient(circle, #7B2FFF, transparent);
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  animation-delay: -5s;
}

@keyframes orb-float {
  0%, 100% { transform: translate(0, 0) scale(1); }
  33% { transform: translate(50px, -50px) scale(1.1); }
  66% { transform: translate(-30px, 30px) scale(0.95); }
}